# نام فایل: .github/workflows/build-freebsd-wheels.yml

name: Build, Cache, and Release FreeBSD Wheels

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    timeout-minutes: 360
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip packages and wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ./wheels
          # از همان کش قبلی استفاده می‌کنیم چون زیرساخت درست است
          key: ${{ runner.os }}-pip-freebsd-v4-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-freebsd-v4-

      - name: Start FreeBSD VM, Build, and Package
        uses: vmactions/freebsd-vm@v1
        id: build_step
        with:
          uses: 'local'
          mem: 8192
          run: |
            # توقف اسکریپت در صورت بروز اولین خطا
            set -e

            # --- ۱. نصب و آماده‌سازی زیرساخت ---
            pkg install -y python311 py311-pip gcc13 openblas lapack zip pkgconf cmake git
            ln -s /usr/local/bin/python3.11 /usr/local/bin/python
            
            # --- ۲. تنظیم متغیرهای محیطی ---
            export FC=/usr/local/bin/gfortran13
            export CC=/usr/local/bin/gcc13
            export CXX=/usr/local/bin/g++13
            export PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
            export PATH="/usr/local/bin:${PATH}"
            
            # --- ۳. آماده‌سازی نیازمندی‌های پایتون ---
            # numpy را از requirements.txt حذف می‌کنیم تا جداگانه ساخته شود
            echo "scikit-learn==1.5.0" > requirements.txt
            echo "hazm" >> requirements.txt
            echo "pyTelegramBotAPI" >> requirements.txt
            
            python3.11 -m pip install --upgrade pip setuptools wheel

            # --- ۴. [اصلاح کلیدی] ساخت مرحله‌ای ---
            
            # مرحله اول: ساخت numpy به صورت تک‌رشته‌ای برای جلوگیری از خطای حافظه
            echo "--- Building numpy (single-threaded)... ---"
            export NPY_NUM_BUILD_JOBS=1
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels numpy

            # مرحله دوم: ساخت بقیه بسته‌ها با استفاده از wheel آماده شده‌ی numpy
            echo "--- Building the rest of the packages... ---"
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels --find-links=./wheels -r requirements.txt

            # --- ۵. بسته‌بندی و خروجی ---
            echo "--- Packaging all wheels into a single zip file... ---"
            zip -r freebsd-wheels.zip wheels/
            
            TAG_NAME="freebsd-wheels-$(date +'%Y%m%d-%H%M%S')"
            echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload Asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.build_step.outputs.tag_name }}"
          
          gh release create "${TAG}" freebsd-wheels.zip \
            --title "FreeBSD Wheels - ${TAG}" \
            --notes "Wheels for Python 3.11 on FreeBSD, built automatically."

          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/freebsd-wheels.zip"
          
          echo "===================================================================="
          echo "✅🎉 Workflow Complete! Your direct download link is ready: 🎉✅"
          echo ""
          echo "${DOWNLOAD_URL}"
          echo ""
          echo "===================================================================="
          echo "Copy and run these commands on your FreeBSD server:"
          echo ""
          echo "wget '${DOWNLOAD_URL}' -O wheels.zip && unzip -o wheels.zip"
          echo "# Create a requirements file including numpy on your server"
          echo "pip install --no-index --find-links=./wheels numpy scikit-learn hazm pyTelegramBotAPI"
          echo ""
          echo "===================================================================="
