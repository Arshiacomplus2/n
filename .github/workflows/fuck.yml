# نام فایل: .github/workflows/build-freebsd-wheels.yml

name: Build, Cache, and Release FreeBSD Wheels

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    timeout-minutes: 360
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip packages and wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ./wheels
          key: ${{ runner.os }}-pip-freebsd-v2-${{ hashFiles('**/requirements.txt') }} # v2 for new strategy
          restore-keys: |
            ${{ runner.os }}-pip-freebsd-v2-

      - name: Start FreeBSD VM, Build, and Package
        uses: vmactions/freebsd-vm@v1
        id: build_step
        with:
          uses: 'local'
          mem: 6144
          copy_back: "freebsd-wheels.zip"
          run: |
            # افزودن set -e باعث می‌شود اسکریپت با اولین خطا متوقف شود
            set -e

            # نصب تمام وابستگی‌های سیستمی
            pkg install -y python311 py311-pip gcc13 openblas lapack zip pkgconf cmake git
            
            # تنظیم تمام متغیرهای محیطی لازم
            export FC=/usr/local/bin/gfortran13
            export CC=/usr/local/bin/gcc13
            export CXX=/usr/local/bin/g++13
            export PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
            export PATH="/usr/local/bin:${PATH}"
            
            # به‌روزرسانی ابزارهای ساخت پایتون
            python3.11 -m pip install --upgrade pip setuptools wheel

            # <--- [استراتژی جدید و اصولی برای بیلد] --->
            
            echo "--- Creating wheels directory ---"
            mkdir -p wheels

            echo "--- Step 1: Building core scientific libraries (numpy, scipy) ---"
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels numpy scipy
            
            echo "--- Step 2: Building other scikit-learn dependencies ---"
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels joblib threadpoolctl

            echo "--- Step 3: Cloning scikit-learn repository ---"
            SKLEARN_VERSION="1.5.0"
            git clone --depth 1 --branch ${SKLEARN_VERSION} https://github.com/scikit-learn/scikit-learn.git scikit-learn-repo
            
            echo "--- Step 4: Building scikit-learn from local clone ---"
            # به pip می‌گوییم که وابستگی‌هایش را از پوشه wheels بخواند
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels --find-links=./wheels ./scikit-learn-repo

            echo "--- Step 5: Building final user packages (hazm, pyTelegramBotAPI) ---"
            # حالا pip برای ساخت hazm، از wheel آماده scikit-learn استفاده می‌کند
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels --find-links=./wheels hazm pyTelegramBotAPI
            
            # مرحله دیباگ برای اطمینان
            echo "--- Final check: Listing contents of wheels directory ---"
            ls -lR wheels
            
            echo "--- Packaging all wheels into a single zip file... ---"
            zip -r freebsd-wheels.zip wheels/
            
            TAG_NAME="freebsd-wheels-$(date +'%Y%m%d-%H%M%S')"
            echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release and Upload Asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          TAG="${{ steps.build_step.outputs.tag_name }}"
          
          if [ $(stat -c%s "freebsd-wheels.zip") -lt 1000000 ]; then # 1MB
            echo "::error::Zip file is too small! Build likely failed. Check the logs."
            exit 1
          fi
          
          gh release create "${TAG}" freebsd-wheels.zip \
            --title "FreeBSD Wheels - ${TAG}" \
            --notes "Wheels for Python 3.11 on FreeBSD. Includes scikit-learn, hazm, pyTelegramBotAPI."
