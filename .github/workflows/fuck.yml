# نام فایل: .github/workflows/build-freebsd-wheels.yml

name: Build, Cache, and Release FreeBSD Wheels

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    timeout-minutes: 360
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip packages and wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ./wheels
          key: ${{ runner.os }}-pip-freebsd-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-freebsd-

      - name: Start FreeBSD VM, Build, and Package
        uses: vmactions/freebsd-vm@v1
        id: build_step
        with:
          uses: 'local'
          mem: 6144
          run: |
            # توقف اسکریپت در صورت بروز اولین خطا
            set -e

            # نصب تمام وابستگی‌های سیستمی ضروری
            # <--- [اصلاح کلیدی] اضافه کردن بسته 'python3'
            # این بسته لینک‌های استاندارد /usr/local/bin/python3 و /usr/local/bin/pip را ایجاد می‌کند
            # و مشکل خطای "command not found" (status 127) را به شکل صحیح حل می‌کند.
            pkg install -y python311 py311-pip python3 gcc13 openblas lapack zip pkgconf cmake git ninja
            
            # تنظیم تمام متغیرهای محیطی لازم
            export FC=/usr/local/bin/gfortran13
            export CC=/usr/local/bin/gcc13
            export CXX=/usr/local/bin/g++13
            export PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
            export PATH="/usr/local/bin:${PATH}"
            
            # ساخت فایل نیازمندی‌ها (توصیه: نسخه‌ها را برای پایداری بیشتر مشخص کنید)
            echo "scikit-learn==1.5.0" > requirements.txt
            echo "hazm" >> requirements.txt
            echo "pyTelegramBotAPI" >> requirements.txt
            
            # به‌روزرسانی ابزارهای ساخت پایتون با استفاده از مفسر دقیق
            python3.11 -m pip install --upgrade pip setuptools wheel

            echo "--- Building all packages from requirements.txt ---"
            # استفاده از مفسر دقیق برای اجرای pip
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels -r requirements.txt

            echo "--- Packaging all wheels into a single zip file... ---"
            zip -r freebsd-wheels.zip wheels/
            
            # ساخت یک تگ منحصر به فرد برای این ریلیز
            TAG_NAME="freebsd-wheels-$(date +'%Y%m%d-%H%M%S')"
            echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
            mv freebsd-wheels.zip /tmp/

      - name: Create GitHub Release and Upload Asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.build_step.outputs.tag_name }}"
          
          gh release create "${TAG}" /tmp/freebsd-wheels.zip \
            --title "FreeBSD Wheels - ${TAG}" \
            --notes "Wheels for Python 3.11 on FreeBSD, built automatically."

          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/freebsd-wheels.zip"
          
          echo "===================================================================="
          echo "✅🎉 Workflow Complete! Your direct download link is ready: 🎉✅"
          echo ""
          echo "${DOWNLOAD_URL}"
          echo ""
          echo "===================================================================="
          echo "Copy and run these commands on your FreeBSD server:"
          echo ""
          echo "wget '${DOWNLOAD_URL}' -O wheels.zip && unzip -o wheels.zip"
          echo "# Create a requirements.txt file on your server first"
          echo "pip install --no-index --find-links=./wheels -r requirements.txt"
          echo ""
          echo "===================================================================="
