name: Build, Cache, and Release FreeBSD Wheels

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # مرحله ۱: اضافه کردن کشینگ برای سرعت بخشیدن به اجراهای بعدی
      - name: Cache pip packages and wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ./wheels
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # مرحله ۲: جادوی اصلی! اجرای FreeBSD و تمام دستورات داخل آن
      - name: Start FreeBSD VM, Build, and Package
        uses: vmactions/freebsd-vm@v1
        id: build_step
        with:
          uses: 'local'
          mem: 6144 # افزایش حافظه برای کامپایل‌های سنگین
          run: |
            # نصب وابستگی‌های سیستمی
            pkg install -y python311 py311-pip gcc13 openblas
            
            # ساخت فایل نیازمندی‌ها
            echo "scikit-learn" > requirements.txt
            echo "hazm" >> requirements.txt
            echo "pyTelegramBotAPI" >> requirements.txt
            
            echo "--- Building wheels from source inside FreeBSD VM... ---"
            # استفاده از آدرس کامل و صحیح پایتون
            /usr/local/bin/python3.11 -m pip install --upgrade pip wheel
            /usr/local/bin/python3.11 -m pip wheel --wheel-dir=./wheels -r requirements.txt
            
            echo "--- Packaging wheels into a single zip file... ---"
            zip -r freebsd-wheels.zip wheels/
            
            # ساخت تگ منحصر به فرد و ثبت آن به عنوان خروجی
            TAG_NAME="freebsd-wheels-$(date +'%Y%m%d-%H%M%S')"
            echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
            
            # انتقال فایل زیپ به پوشه اشتراکی تا در مرحله بعد قابل دسترس باشد
            mv freebsd-wheels.zip /tmp/

      # مرحله ۳: ایجاد Release و آپلود فایل ساخته شده
      - name: Create GitHub Release and Upload Asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # استفاده از تگی که داخل ماشین مجازی ساخته شد
          TAG="${{ steps.build_step.outputs.tag_name }}"
          
          echo "--- Creating GitHub Release with tag ${TAG}... ---"
          # فایل زیپ از پوشه اشتراکی /tmp برداشته می‌شود
          gh release create "${TAG}" /tmp/freebsd-wheels.zip \
            --title "FreeBSD Wheels - ${TAG}" \
            --notes "Wheels for Python 3.11 on FreeBSD, built automatically with caching."

          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/freebsd-wheels.zip"
          
          echo "===================================================================="
          echo "✅🎉 Workflow Complete! Your direct download link is ready: 🎉✅"
          echo ""
          echo "${DOWNLOAD_URL}"
          echo ""
          echo "===================================================================="
          echo "Copy and run this command on your server:"
          echo ""
          echo "wget '${DOWNLOAD_URL}' -O wheels.zip"
          echo ""
          echo "===================================================================="
