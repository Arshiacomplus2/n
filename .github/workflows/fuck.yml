# نام فایل: .github/workflows/build-freebsd-wheels.yml

name: Build, Cache, and Release FreeBSD Wheels

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    timeout-minutes: 360
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip packages and wheels
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ./wheels
          key: ${{ runner.os }}-pip-freebsd-v3-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-freebsd-v3-

      - name: Start FreeBSD VM, Build, and Package
        uses: vmactions/freebsd-vm@v1
        id: build_step
        with:
          uses: 'local'
          mem: 8192 # 8GB RAM
          run: |
            # توقف اسکریپت در صورت بروز اولین خطا
            set -e

            # ۱. نصب تمام وابستگی‌های سیستمی لازم
            pkg install -y python311 py311-pip gcc13 openblas lapack zip pkgconf cmake git ninja
            
            # ۲. ساخت سیم‌لینک برای اینکه دستور 'python3' در دسترس باشد (بسیار مهم)
            ln -s /usr/local/bin/python3.11 /usr/local/bin/python3

            # ۳. تنظیم متغیرهای محیطی برای کامپایلرها
            export FC=/usr/local/bin/gfortran13
            export CC=/usr/local/bin/gcc13
            export CXX=/usr/local/bin/g++13
            export PKG_CONFIG_PATH=/usr/local/libdata/pkgconfig
            export PATH="/usr/local/bin:${PATH}"
            
            # ۴. محدود کردن پردازش موازی برای جلوگیری از خطای حافظه
            export NINJA_ARGS="-j1"

            # ۵. به‌روزرسانی ابزارهای پایه و نصب وابستگی‌های ساخت در محیط اصلی
            python3.11 -m pip install --upgrade pip setuptools wheel
            echo "--- Installing build dependencies (meson, ninja, cython) ---"
            python3.11 -m pip install meson-python ninja "cython>=3.0.0"

            # --- شروع فرآیند ساخت مرحله به مرحله ---

            echo "--- مرحله ۱: ساخت وابستگی‌های علمی اصلی (numpy, scipy) ---"
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels numpy scipy

            echo "--- مرحله ۲: ساخت scikit-learn با استفاده از وابستگی‌های موجود ---"
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels \
              --no-build-isolation \
              --find-links=./wheels \
              scikit-learn==1.5.0

            echo "--- مرحله ۳: ساخت بسته‌های باقی‌مانده (hazm, pyTelegramBotAPI) ---"
            python3.11 -m pip wheel --verbose --wheel-dir=./wheels \
              --find-links=./wheels \
              hazm pyTelegramBotAPI
            
            # --- پایان فرآیند ساخت ---
            
            echo "--- بررسی نهایی: لیست فایل‌های wheel ساخته شده ---"
            ls -lR wheels

            echo "--- بسته‌بندی فایل‌ها در یک فایل zip ---"
            zip -r freebsd-wheels.zip wheels/
            
            TAG_NAME="freebsd-wheels-$(date +'%Y%m%d-%H%M%S')"
            echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
            mv freebsd-wheels.zip /tmp/

      - name: Create GitHub Release and Upload Asset
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ steps.build_step.outputs.tag_name }}"
          
          gh release create "${TAG}" /tmp/freebsd-wheels.zip \
            --title "FreeBSD Wheels - ${TAG}" \
            --notes "Wheels for Python 3.11 on FreeBSD, built successfully using a staged approach."

          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/freebsd-wheels.zip"
          
          echo "===================================================================="
          echo "✅🎉 Workflow Complete! Your direct download link is ready: 🎉✅"
          echo ""
          echo "${DOWNLOAD_URL}"
          echo ""
          echo "===================================================================="
          echo "Copy and run this command on your FreeBSD server:"
          echo ""
          echo "wget '${DOWNLOAD_URL}' -O wheels.zip && unzip -o wheels.zip"
          echo 'echo "hazm" > requirements.txt && echo "scikit-learn==1.5.0" >> requirements.txt && echo "pyTelegramBotAPI" >> requirements.txt'
          echo "pip install --no-index --find-links=./wheels -r requirements.txt"
          echo ""
          echo "===================================================================="
